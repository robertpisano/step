"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VitePluginTailwind = void 0;
const path_1 = __importDefault(require("path"));
const vite_plugin_tailwind_viewer_1 = require("./vite-plugin-tailwind-viewer");
function VitePluginTailwind(options = {}) {
    const config = {
        jit: true,
        autoprefixer: false,
        nesting: false,
        cssPath: path_1.default.resolve(__dirname, "../tailwind.css"),
        virtualFileId: "@tailwindcss",
        viewer: {
            path: '/_tailwind/',
            open: false
        },
        tailwind: {
            // @ts-ignore looks like a bug in type def
            purge: ['./index.html', './src/**/*.{vue,js,ts,jsx,tsx,svelte}']
        },
        ...options
    };
    return [
        {
            name: 'vite-plugin-tailwind',
            config: (_, env) => {
                const plugins = [];
                // need this for jit plugin to enable watch mode
                process.env.NODE_ENV = env.mode;
                const tailwind = config.jit ? require('@tailwindcss/jit') : require('tailwindcss');
                const tailwindPlugin = tailwind(config.tailwind);
                plugins.push(tailwindPlugin);
                if (config.nesting) {
                    plugins.push(require('postcss-nesting'));
                }
                if (config.autoprefixer) {
                    plugins.push(require('autoprefixer'));
                }
                return {
                    css: {
                        postcss: {
                            plugins
                        }
                    }
                };
            },
            resolveId(id) {
                if (id === config.virtualFileId) {
                    return config.cssPath;
                }
            }
        },
        vite_plugin_tailwind_viewer_1.VitePluginTailwindViewer({
            ...config.viewer,
            tailwind: config.tailwind
        })
    ];
}
exports.VitePluginTailwind = VitePluginTailwind;
//# sourceMappingURL=vite-plugin-tailwind.js.map